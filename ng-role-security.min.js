/*! ng-role-security.js 2015-07-13 */
"use strict";!function(){angular.module("ngRoleSecurity",["ngRoute","ngStorage"]).constant("securityConfig",{authoritiesUrl:"",forbiddenRoute:"",authorities:[],storageType:"session"}).run(function(a,b,c,d){d.authorities=c.getAuthorities(),b.$on("$routeChangeStart",function(e,f){if("undefined"!=typeof f.requiredRole){var g=c.hasPermission(f.requiredRole)?f.originalPath:d.forbiddenRoute;b.$evalAsync(function(){a.path(g)})}})}),angular.module("ngRoleSecurity").directive("requireRole",function(a,b){return{restrict:"A",link:function(c,d,e){c.$watch(function(){return b.authorities},function(){var b=e.requireRole;a.hasPermission(b.split(","))?d.removeClass("hidden"):d.addClass("hidden")})}}}),angular.module("ngRoleSecurity").factory("$securityService",function(a,b,c,d){function e(){return"local"===d.storageType?b:a}return{getRemoteAuthorities:function(a){return c.get(d.authoritiesUrl).success(function(b){e().authorities=b,d.authorities=b,a&&a()})},getAuthorities:function(){var a=[];return"undefined"!=typeof e().authorities&&null!=e().authorities&&(a=e().authorities),a},hasPermission:function(a){angular.isArray(a)||(a=[a]);var b=this.getAuthorities(),c=!1;return angular.forEach(a,function(a){angular.forEach(b,function(b){b===a&&(c=!0)})}),c},reset:function(){e().authorities=[]}}})}();